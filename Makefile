# Makefile –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ –ê—Ç–ª–∞–Ω—Ç–∏—Å-–ü–∞–∫

.PHONY: help build up down restart logs clean init test dev-frontend

# –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
help:
	@echo "–°–∏—Å—Ç–µ–º–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ –ê—Ç–ª–∞–Ω—Ç–∏—Å-–ü–∞–∫"
	@echo "================================================"
	@echo ""
	@echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
	@echo "  make build         - –°–æ–±—Ä–∞—Ç—å Docker –æ–±—Ä–∞–∑—ã"
	@echo "  make up            - –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã"
	@echo "  make down          - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã"
	@echo "  make restart       - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã"
	@echo "  make logs          - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤"
	@echo "  make init          - –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö"
	@echo "  make clean         - –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ Docker —Ä–µ—Å—É—Ä—Å—ã"
	@echo "  make test          - –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã"
	@echo "  make dev-frontend  - –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
	@echo "  make install-frontend - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞"
	@echo ""
	@echo "–î–æ—Å—Ç—É–ø –∫ —Å–µ—Ä–≤–∏—Å–∞–º:"
	@echo "  –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: http://localhost:8501"
	@echo "  API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://localhost:8000/docs"
	@echo "  PostgreSQL: localhost:5432"

# –°–æ–±—Ä–∞—Ç—å –æ–±—Ä–∞–∑—ã
build:
	@echo "üèóÔ∏è  –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–æ–≤..."
	docker-compose build

# –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã
up:
	@echo "üöÄ –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
	mkdir -p data/import data/export logs
	docker-compose up --build -d
	@echo "‚úÖ –°–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã:"
	@echo "   - –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å (Vue.js): http://localhost:8501"
	@echo "   - API: http://localhost:8000"
	@echo "   - API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://localhost:8000/docs"

# –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤ foreground
up-fg:
	@echo "üöÄ –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ (foreground)..."
	mkdir -p data/import data/export logs
	docker-compose up --build

# –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã
down:
	@echo "‚èπÔ∏è  –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
	docker-compose down

# –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å —É–¥–∞–ª–µ–Ω–∏–µ–º —Ç–æ–º–æ–≤
down-clean:
	@echo "üßπ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å –æ—á–∏—Å—Ç–∫–æ–π –¥–∞–Ω–Ω—ã—Ö..."
	docker-compose down -v

# –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã
restart:
	@echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
	docker-compose restart

# –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏
logs:
	docker-compose logs --tail=100 -f

# –õ–æ–≥–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞
logs-api:
	docker-compose logs --tail=100 -f api

logs-web:
	docker-compose logs --tail=100 -f web

logs-db:
	docker-compose logs --tail=100 -f database

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
init:
	@echo "üóÑÔ∏è  –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
	docker-compose up -d database
	@echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
	sleep 10
	docker-compose run --rm data_initializer
	@echo "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞"

# –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤
status:
	@echo "üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:"
	docker-compose ps

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞–º
shell-api:
	docker-compose exec api bash

shell-db:
	docker-compose exec database psql -U atlantis_user atlantis_pack_optimization

shell-web:
	docker-compose exec web sh

# –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
backup:
	@echo "üíæ –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
	mkdir -p backups
	docker-compose exec database pg_dump -U atlantis_user atlantis_pack_optimization > backups/backup_$(shell date +%Y%m%d_%H%M%S).sql
	@echo "‚úÖ –ë—ç–∫–∞–ø —Å–æ–∑–¥–∞–Ω –≤ –ø–∞–ø–∫–µ backups/"

# –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ –±—ç–∫–∞–ø–∞ (–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: make restore BACKUP=backups/backup_20241201_120000.sql)
restore:
	@if [ -z "$(BACKUP)" ]; then \
		echo "‚ùå –£–∫–∞–∂–∏—Ç–µ —Ñ–∞–π–ª –±—ç–∫–∞–ø–∞: make restore BACKUP=path/to/backup.sql"; \
		exit 1; \
	fi
	@echo "üì• –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ –±—ç–∫–∞–ø–∞ $(BACKUP)..."
	docker-compose exec -T database psql -U atlantis_user atlantis_pack_optimization < $(BACKUP)
	@echo "‚úÖ –ë—ç–∫–∞–ø –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"

# –û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö Docker —Ä–µ—Å—É—Ä—Å–æ–≤
clean:
	@echo "üßπ –û—á–∏—Å—Ç–∫–∞ Docker —Ä–µ—Å—É—Ä—Å–æ–≤..."
	docker-compose down -v --rmi local --remove-orphans
	docker system prune -f
	@echo "‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"

# –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ (–≤–∫–ª—é—á–∞—è –æ–±—Ä–∞–∑—ã)
clean-all:
	@echo "üßπ –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ Docker..."
	docker-compose down -v --rmi all --remove-orphans
	docker system prune -a -f
	@echo "‚úÖ –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
test:
	@echo "üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤..."
	docker-compose run --rm api python -m pytest tests/ -v

# –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ä–µ—Å—É—Ä—Å–æ–≤
monitor:
	@echo "üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤:"
	docker stats --no-stream

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–æ–≤
health:
	@echo "üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–æ–≤:"
	@echo "API —Å–µ—Ä–≤–µ—Ä:"
	@curl -s http://localhost:8000/health || echo "‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
	@echo ""
	@echo "–í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å:"
	@curl -s http://localhost:8501 || echo "‚ùå –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
install-frontend:
	@echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞..."
	cd frontend && npm install
	@echo "‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

# –ó–∞–ø—É—Å–∫ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
dev-frontend:
	@echo "üñ•Ô∏è  –ó–∞–ø—É—Å–∫ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏..."
	@echo "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ API —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω (make up api –∏–ª–∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ API –æ—Ç–¥–µ–ª—å–Ω–æ)"
	cd frontend && npm run dev

# –°–±–æ—Ä–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
build-frontend:
	@echo "üèóÔ∏è  –°–±–æ—Ä–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞..."
	cd frontend && npm run build
	@echo "‚úÖ –§—Ä–æ–Ω—Ç–µ–Ω–¥ —Å–æ–±—Ä–∞–Ω"

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ (–±–µ–∑ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤)
dev-setup:
	@echo "üõ†Ô∏è  –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ä–µ–¥—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏..."
	python -m venv venv
	@echo "–ê–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ:"
	@echo "  source venv/bin/activate  # Linux/Mac"
	@echo "  venv\\Scripts\\activate     # Windows"
	@echo "–ó–∞—Ç–µ–º –∑–∞–ø—É—Å—Ç–∏—Ç–µ:"
	@echo "  pip install -r requirements.txt"
	@echo "  python main.py full"
	@echo ""
	@echo "–î–ª—è —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞:"
	@echo "  make install-frontend"
	@echo "  make dev-frontend"

# –ë—ã—Å—Ç—Ä—ã–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
dev-restart:
	docker-compose restart api web

# –ü—Ä–æ—Å–º–æ—Ç—Ä —Å–µ—Ç–µ–π Docker
networks:
	@echo "üåê Docker —Å–µ—Ç–∏:"
	docker network ls
	@echo ""
	@echo "–î–µ—Ç–∞–ª–∏ —Å–µ—Ç–∏ atlantis_network:"
	docker network inspect code2_atlantis_network || echo "–°–µ—Ç—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"

# –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø—Ä–∞–≤–∫—É
.DEFAULT_GOAL := help 